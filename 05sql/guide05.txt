1. Basic SQL (Section 6.3) — Review basic SQL as needed, then write sample queries that:

Use one or more tuple variables (Section 6.3.2).

SELECT M.title, P.firstName, P.lastName, C.status
FROM Movie M, Performer P, Casting C
WHERE P.id = C.performerId;

Use one or more of the set operations, e.g., UNION, EXCEPT, INTERSECT (Section 6.3.4).

- Union Operation:
SELECT DISTINCT firstName
FROM Performer, Casting
WHERE Performer.id = Casting.performerId AND status = 'costar'
UNION 
SELECT DISTINCT firstName
FROM Performer, Casting
WHERE Performer.id = Casting.performerId AND status = 'extra';

- Intersect Operation:
SELECT id FROM Performer
INTERSECT 
SELECT performerId FROM Casting;


2. Advanced SQL (Sections 7.1.1–7.1.5) — This will include more new material; write sample queries that:

Select based on a NULL field value (Section 7.1.1).

SELECT firstName, lastName FROM Performer
WHERE lastName IS NULL;

Implement a nested sub-query, using [NOT] EXISTS, IN, ANY or ALL (Sections 7.1.2–7.1.4).

SELECT firstName, lastName
FROM Performer
WHERE NOT EXISTS (SELECT * FROM Casting WHERE performer.id = Casting.performerId);

Implement a correlated sub-query (Section 7.1.3).

SELECT firstName, lastName
FROM Movie, Performer, Casting
WHERE Performer.id = Casting.performerId AND 
Movie.id = Casting.movieId;
